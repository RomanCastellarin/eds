pred issensor := e.strcmp(appname, "test1") /\ e.strcmp(type,"sensor")

stream num sensorTS := if issensor then e.getnum(timestamp)
stream num lastSensorTS := last sensorTS
stream bool notTooOftenSensor := sensorTS - lastSensorTS > 5
stream bool sensorhigh := issensor /\ e.getnum(svalue.actual) > e.getnum(svalue.threshold)
stream bool notconsecutivesensors := issensor
stream bool sensorwait := sensorhigh
stream bool must_end := e.strcmp(ourmessage,"STOP_TEST")
trigger must_end do emit must_end on #terminate

stream bool test1sensor := e.strcmp(appname, "test1") /\ e.strcmp(type,"sensor")
stream bool test1actuator := e.strcmp(appname, "test1") /\ e.strcmp(type,"actuator")
stream bool test1logic := e.strcmp(appname, "test1") /\ e.strcmp(type,"logic")

stream bool test1sensortrigger := e.getnum(svalue.actual) > e.getnum(svalue.threshold)
stream num sensorvalue := e.getnum(svalue.actual)
stream num eventid := e.getnum(id)

trigger test1sensor do emit eventid on #test1sensor
trigger test1actuator do emit eventid on #test1actuator
trigger test1logic do emit eventid on #test1logic

trigger test1sensortrigger do emit `{"myvalue": "%sensorvalue", "myid": "%eventid"}` on #test1sensortrigger
